{
  
    
        "post0": {
            "title": "Dictionaries",
            "content": "",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu/2022/09/02/Dictionaries.ipynb",
            "relUrl": "/2022/09/02/Dictionaries.ipynb",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Bash",
            "content": "{ “cells”: [ { “cell_type”: “code”, “execution_count”: 1, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Using conditional statement to create a project directory and project n”, “Directory /home/wsl/vscode exists. n”, “Directory /home/wsl/vscode/APCSP does not exists… cloning https://github.com/nighthawkcoders/APCSP.git n”, “Cloning into ‘APCSP’… n”, “remote: Enumerating objects: 10641, done. u001b[K n”, “remote: Counting objects: 100% (2216/2216), done. u001b[K n”, “remote: Compressing objects: 100% (766/766), done. u001b[K n”, “remote: Total 10641 (delta 1375), reused 2165 (delta 1325), pack-reused 8425 u001b[K n”, “Receiving objects: 100% (10641/10641), 17.37 MiB | 7.00 MiB/s, done. n”, “Resolving deltas: 100% (5870/5870), done. n”, “Directory /home/wsl/vscode/APCSP exists. n” ] } ], “source”: [ “echo &quot;Using conditional statement to create a project directory and project&quot; n”, “ n”, “# Variable section n”, “export project_dir=$HOME/vscode # change vscode to different name to test git clone n”, “export project=$project_dir/APCSP # change APCSP to name of project from git clone n”, “export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice n”, “ n”, “cd ~ # start in home directory n”, “ n”, “# Conditional block to make a project directory n”, “if [ ! -d $project_dir ] n”, “then n”, “ echo &quot;Directory $project_dir does not exists… makinng directory $project_dir&quot; n”, “ mkdir -p $project_dir n”, “fi n”, “echo &quot;Directory $project_dir exists.&quot; n”, “ n”, “# Conditional block to git clone a project from project_repo n”, “if [ ! -d $project ] n”, “then n”, “ echo &quot;Directory $project does not exists… cloning $project_repo&quot; n”, “ cd $project_dir n”, “ git clone $project_repo n”, “ cd ~ n”, “fi n”, “echo &quot;Directory $project exists.&quot;” ] }, { “cell_type”: “code”, “execution_count”: 2, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Navigate to project, then navigate to area wwhere files were cloned n”, “/home/wsl/vscode/APCSP n”, “ n”, “list top level or root of files with project pulled from github n”, “ u001b[0m u001b[01;32mGemfile u001b[0m u001b[01;34m_action_files u001b[0m u001b[01;34m_layouts u001b[0m u001b[01;34m_posts u001b[0m u001b[01;32mdocker-compose.yml u001b[0m n”, “LICENSE config.yml u001b[01;34m_notebooks u001b[0m u001b[01;34m_sass u001b[0m u001b[01;34mimages u001b[0m n”, “ u001b[01;32mMakefile u001b[0m u001b[01;34m_fastpages_docs u001b[0m u001b[01;34m_pages u001b[0m u001b[01;34m_word u001b[0m index.html n”, “ u001b[01;32mREADME.md u001b[0m u001b[01;34m_includes u001b[0m u001b[01;34m_plugins u001b[0m u001b[01;34massets u001b[0m u001b[01;34mpython u001b[0m n”, “ n”, “list again with hidden files pulled from github n”, “ u001b[0m u001b[01;34m. u001b[0m .gitignore u001b[01;34m_action_files u001b[0m u001b[01;34m_pages u001b[0m u001b[01;32mdocker-compose.yml u001b[0m n”, “ u001b[01;34m.. u001b[0m u001b[01;34m.vscode u001b[0m _config.yml u001b[01;34m_plugins u001b[0m u001b[01;34mimages u001b[0m n”, “.devcontainer.json u001b[01;32mGemfile u001b[0m u001b[01;34m_fastpages_docs u001b[0m u001b[01;34m_posts u001b[0m index.html n”, “ u001b[01;34m.git u001b[0m LICENSE u001b[01;34m_includes u001b[0m u001b[01;34m_sass u001b[0m u001b[01;34mpython u001b[0m n”, “.gitattributes u001b[01;32mMakefile u001b[0m u001b[01;34m_layouts u001b[0m u001b[01;34m_word u001b[0m n”, “ u001b[01;34m.github u001b[0m u001b[01;32mREADME.md u001b[0m u001b[01;34m_notebooks u001b[0m u001b[01;34massets u001b[0m n”, “ n”, “list all files in long format n”, “total 40 n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[0m u001b[01;34m. u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m.. u001b[0m n”, “-rw-r–r– 1 wsl wsl 420 Sep 5 19:16 .devcontainer.json n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m.git u001b[0m n”, “-rw-r–r– 1 wsl wsl 84 Sep 5 19:16 .gitattributes n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m.github u001b[0m n”, “-rw-r–r– 1 wsl wsl 1270 Sep 5 19:16 .gitignore n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m.vscode u001b[0m n”, “-rwxr-xr-x 1 wsl wsl 1304 Sep 5 19:16 u001b[01;32mGemfile u001b[0m n”, “-rw-r–r– 1 wsl wsl 11351 Sep 5 19:16 LICENSE n”, “-rwxr-xr-x 1 wsl wsl 1422 Sep 5 19:16 u001b[01;32mMakefile u001b[0m n”, “-rwxr-xr-x 1 wsl wsl 3614 Sep 5 19:16 u001b[01;32mREADME.md u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_action_files u001b[0m n”, “-rw-r–r– 1 wsl wsl 3717 Sep 5 19:16 _config.yml n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_fastpages_docs u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_includes u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_layouts u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_notebooks u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_pages u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_plugins u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_posts u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_sass u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34m_word u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34massets u001b[0m n”, “-rwxr-xr-x 1 wsl wsl 1136 Sep 5 19:16 u001b[01;32mdocker-compose.yml u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34mimages u001b[0m n”, “-rw-r–r– 1 wsl wsl 1061 Sep 5 19:16 index.html n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34mpython u001b[0m n” ] } ], “source”: [ “echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; n”, “cd $project n”, “pwd n”, “ n”, “echo &quot;&quot; n”, “echo &quot;list top level or root of files with project pulled from github&quot; n”, “ls n”, “ n”, “echo &quot;&quot; n”, “echo &quot;list again with hidden files pulled from github&quot; n”, “ls -a # hidden files flag, many shell commands have flags n”, “ n”, “echo &quot;&quot; n”, “echo &quot;list all files in long format&quot; n”, “ls -al # all files and long listing” ] }, { “cell_type”: “code”, “execution_count”: 3, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Look for posts n”, “/home/wsl/vscode/APCSP/_posts n”, “total 300 n”, “-rw-r–r– 1 wsl wsl 5861 Sep 5 19:16 2022-07-07-PBL-binary.md n”, “-rw-r–r– 1 wsl wsl 3085 Sep 5 19:16 2022-07-08-PBL-grade_calc.md n”, “-rw-r–r– 1 wsl wsl 3698 Sep 5 19:16 2022-07-08-PBL-graph.md n”, “-rw-r–r– 1 wsl wsl 5729 Sep 5 19:16 2022-07-08-PBL-life.md n”, “-rw-r–r– 1 wsl wsl 14387 Sep 5 19:16 2022-07-08-PBL-snake.md n”, “-rw-r–r– 1 wsl wsl 334 Sep 5 19:16 2022-07-10-PBL-database.md n”, “-rw-r–r– 1 wsl wsl 2908 Sep 5 19:16 2022-07-10-PBL-jokes.md n”, “-rw-r–r– 1 wsl wsl 4046 Sep 5 19:16 2022-07-10-PBL-rapidapi.md n”, “-rw-r–r– 1 wsl wsl 6685 Sep 5 19:16 2022-07-19-PBL-calculator.md n”, “-rw-r–r– 1 wsl wsl 32447 Sep 5 19:16 2022-07-19-PBL-js_tutorial.md n”, “-rw-r–r– 1 wsl wsl 23325 Sep 5 19:16 2022-07-25-CSP-workshop.md n”, “-rw-r–r– 1 wsl wsl 4380 Sep 5 19:16 2022-08-15-AP-pseudo_code.md n”, “-rw-r–r– 1 wsl wsl 2353 Sep 5 19:16 2022-08-15-HM-student_score_history.md n”, “-rw-r–r– 1 wsl wsl 15427 Sep 5 19:16 2022-08-15-PBL-tools.md n”, “-rw-r–r– 1 wsl wsl 8054 Sep 5 19:16 2022-08-15-PT-tool_setup.md n”, “-rw-r–r– 1 wsl wsl 5590 Sep 5 19:16 2022-08-15-TT101-vscode-wsl.md n”, “-rw-r–r– 1 wsl wsl 5191 Sep 5 19:16 2022-08-22-PBL-fastpages.md n”, “-rw-r–r– 1 wsl wsl 2241 Sep 5 19:16 2022-08-22-PT-intro_python.md n”, “-rw-r–r– 1 wsl wsl 6505 Sep 5 19:16 2022-08-29-PBL-html_fragments.md n”, “-rw-r–r– 1 wsl wsl 2671 Sep 5 19:16 2022-08-29-PT-data_abstraction.md n”, “-rw-r–r– 1 wsl wsl 2374 Sep 5 19:16 2022-08-29-PT120-data_abstract.md n”, “-rw-r–r– 1 wsl wsl 9054 Sep 5 19:16 2022-09-05-AP-create_performance_task.md n”, “-rw-r–r– 1 wsl wsl 8025 Sep 5 19:16 2022-09-05-HM-create-task-bria.md n”, “-rw-r–r– 1 wsl wsl 3576 Sep 5 19:16 2022-09-05-PBL-applab.md n”, “-rw-r–r– 1 wsl wsl 3028 Sep 5 19:16 2022-09-05-PT-creative_dev.md n”, “-rw-r–r– 1 wsl wsl 8152 Sep 5 19:16 2022-09-05-PT-creative_development.md n”, “-rw-r–r– 1 wsl wsl 1245 Sep 5 19:16 2022-09-12-AP-colaboration.md n”, “-rw-r–r– 1 wsl wsl 2819 Sep 5 19:16 2022-09-12-HM-focus.md n”, “-rw-r–r– 1 wsl wsl 5430 Sep 5 19:16 2022-09-12-PBL-fastpages-docker.md n”, “-rw-r–r– 1 wsl wsl 3575 Sep 5 19:16 2022-09-12-PBL-python_flask.md n”, “-rw-r–r– 1 wsl wsl 2501 Sep 5 19:16 2022-09-12-PT-python_server.md n”, “-rw-r–r– 1 wsl wsl 1123 Sep 5 19:16 2022-09-19-AP-progran_purpose.md n”, “-rw-r–r– 1 wsl wsl 10836 Sep 5 19:16 2022-09-19-HM-agile.md n”, “-rw-r–r– 1 wsl wsl 22420 Sep 5 19:16 2022-09-19-TT-deploy.md n”, “-rw-r–r– 1 wsl wsl 2764 Sep 5 19:16 2022-09-26-AP-program_design.md n”, “-rw-r–r– 1 wsl wsl 4717 Sep 5 19:16 2022-09-26-HM-github-sociology.md n”, “-rw-r–r– 1 wsl wsl 720 Sep 5 19:16 README.md n”, “-rw-r–r– 1 wsl wsl 376 Sep 5 19:16 sample.md n” ] } ], “source”: [ “echo &quot;Look for posts&quot; n”, “export posts=$project/_posts # _posts inside project n”, “cd $posts # this should exist per fastpages n”, “pwd # present working directory n”, “ls -l # list posts” ] }, { “cell_type”: “code”, “execution_count”: 4, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Look for notebooks n”, “/home/wsl/vscode/APCSP/_notebooks n”, “total 148 n”, “-rw-r–r– 1 wsl wsl 14243 Sep 5 19:16 2022-06-01-TT150-webapi_tutorial.ipynb n”, “-rw-r–r– 1 wsl wsl 8653 Sep 5 19:16 2022-07-21-PBL-neo4j_intro.ipynb n”, “-rw-r–r– 1 wsl wsl 11754 Sep 5 19:16 2022-08-22-AP-python_hello.ipynb n”, “-rw-r–r– 1 wsl wsl 20009 Sep 5 19:16 2022-08-22-HM-anthony_and_sahil.ipynb n”, “-rw-r–r– 1 wsl wsl 12708 Sep 5 19:16 2022-08-22-PBL-bash_tutorial.ipynb n”, “-rw-r–r– 1 wsl wsl 35721 Sep 5 19:16 2022-08-25-tool_check.ipynb n”, “-rw-r–r– 1 wsl wsl 13344 Sep 5 19:16 2022-08-29-AP-python_lists.ipynb n”, “-rw-r–r– 1 wsl wsl 12632 Sep 5 19:16 2022-09-05-PBL-js_tutorial.ipynb n”, “-rw-r–r– 1 wsl wsl 771 Sep 5 19:16 README.md n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[0m u001b[01;34mimages u001b[0m n” ] } ], “source”: [ “echo &quot;Look for notebooks&quot; n”, “export notebooks=$project/_notebooks # _notebooks is inside project n”, “cd $notebooks # this should exist per fastpages n”, “pwd # present working directory n”, “ls -l # list notebooks” ] }, { “cell_type”: “code”, “execution_count”: 5, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Look for images in notebooks, print working directory, list files n”, “/home/wsl/vscode/APCSP/_notebooks/images n”, “total 100 n”, “-rw-r–r– 1 wsl wsl 101617 Sep 5 19:16 u001b[0m u001b[01;35mkernels.png u001b[0m n” ] } ], “source”: [ “echo &quot;Look for images in notebooks, print working directory, list files&quot; n”, “cd $notebooks/images # this should exist per fastpages n”, “pwd n”, “ls -l” ] }, { “cell_type”: “code”, “execution_count”: 6, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Navigate to project, then navigate to area wwhere files were cloned n”, “show the contents of README.md n”, “ n”, “[//]: # (This template replaces README.md when someone creates a new repo with the fastpages template.) n”, “ n”, “ n”, “ n”, “ n”, “ n”, “https://nighthawkcoders.github.io/APCSP/ n”, “ n”, “# My Blog n”, “ n”, “ n”, “_powered by fastpages n”, “ n”, “ n”, “## What To Do Next? n”, “ n”, “Great! You have setup your repo. Now its time to start writing content. Some helpful links: n”, “ n”, “- Writing Blogs With Jupyter n”, “ n”, “- Writing Blogs With Markdown n”, “ n”, “- Writing Blog Posts With Word n”, “ n”, “- (Optional) Preview Your Blog Locally n”, “ n”, “Note: you may want to remove example blog posts from the _posts, _notebooks or _word folders (but leave them empty, don’t delete these folders) if you don’t want these blog posts to appear on your site. n”, “ n”, “Please use the nbdev &amp; blogging channel in the fastai forums for any questions or feature requests. n”, “ n”, “end of README.md n” ] } ], “source”: [ “echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; n”, “ n”, “cd $project n”, “echo &quot;show the contents of README.md&quot; n”, “echo &quot;&quot; n”, “ n”, “cat README.md # show contents of file, in this case markdown n”, “echo &quot;&quot; n”, “echo &quot;end of README.md&quot; n” ] }, { “cell_type”: “code”, “execution_count”: 7, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Show the shell environment variables, key on left of equal value on right n”, “ n”, “SHELL=/bin/bash n”, “PYTHONUNBUFFERED=1 n”, “project=/home/wsl/vscode/APCSP n”, “CONDA_EXE=/home/wsl/anaconda3/bin/conda n”, “CE_M= n”, “WSL_DISTRO_NAME=Ubuntu n”, “ELECTRON_RUN_AS_NODE=1 n”, “VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess n”, “NAME=DESKTOP-MO9P2U3 n”, “PWD=/home/wsl/vscode/APCSP n”, “LOGNAME=wsl n”, “CONDA_PREFIX=/home/wsl/anaconda3 n”, “project_dir=/home/wsl/vscode n”, “HOME=/home/wsl n”, “LANG=C.UTF-8 n”, “LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: n”, “CONDA_PROMPT_MODIFIER=(base) n”, “PYDEVD_USE_FRAME_EVAL=NO n”, “posts=/home/wsl/vscode/APCSP/_posts n”, “LESSCLOSE=/usr/bin/lesspipe %s %s n”, “VSCODE_HANDLES_SIGPIPE=true n”, “TERM=xterm-256color n”, “_CE_CONDA= n”, “LESSOPEN=| /usr/bin/lesspipe %s n”, “USER=wsl n”, “PYTHONIOENCODING=utf-8 n”, “notebooks=/home/wsl/vscode/APCSP/_notebooks n”, “CONDA_SHLVL=1 n”, “SHLVL=1 n”, “PAGER=cat n”, “project_repo=https://github.com/nighthawkcoders/APCSP.git n”, “VSCODE_CWD=/mnt/c/Users/jwu20/AppData/Local/Programs/Microsoft VS Code n”, “CONDA_PYTHON_EXE=/home/wsl/anaconda3/bin/python n”, “PS1=[PEXP [ ]ECT_PROMPT&gt; n”, “CONDA_DEFAULT_ENV=base n”, “WSLENV=VSCODE_WSL_EXT_LOCATION/up:VSCODE_SERVER_TAR/up n”, “VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/jwu20/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 n”, “PATH=/home/wsl/anaconda3/bin:/home/wsl/anaconda3/condabin:/home/wsl/.vscode-server/bin/784b0177c56c607789f9638da7b6bf3230d47a8c/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Users/jwu20/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/jwu20/AppData/Local/Programs/Microsoft VS Code/bin n”, “VSCODE_NLS_CONFIG={&quot;locale&quot;:&quot;en&quot;,&quot;availableLanguages&quot;:{}} n”, “VSCODE_SERVER_TAR=/mnt/c/Users/jwu20/AppData/Local/Temp/vscode-remote-wsl/784b0177c56c607789f9638da7b6bf3230d47a8c/vscode-server-stable-linux-x64.tar.gz n”, “HOSTTYPE=x86_64 n”, “VSCODE_HANDLES_UNCAUGHT_ERRORS=true n”, “OLDPWD=/home/wsl/vscode/APCSP/_notebooks/images n”, “VSCODE_IPC_HOOK_CLI=/tmp/vscode-ipc-8ebd4945-3ba4-41d1-b31e-bf5f8e1cbacd.sock n”, “=/usr/bin/env n” ] } ], “source”: [ “echo &quot;Show the shell environment variables, key on left of equal value on right&quot; n”, “echo &quot;&quot; n”, “ n”, “env” ] }, { “cell_type”: “code”, “execution_count”: 8, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “ n”, “show the secrets of .git n”, “total 24 n”, “-rw-r–r– 1 wsl wsl 23 Sep 5 19:16 HEAD n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[0m u001b[01;34mbranches u001b[0m n”, “-rw-r–r– 1 wsl wsl 269 Sep 5 19:16 config n”, “-rw-r–r– 1 wsl wsl 73 Sep 5 19:16 description n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34mhooks u001b[0m n”, “-rw-r–r– 1 wsl wsl 22189 Sep 5 19:16 index n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34minfo u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34mlogs u001b[0m n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34mobjects u001b[0m n”, “-rw-r–r– 1 wsl wsl 271 Sep 5 19:16 packed-refs n”, “drwxr-xr-x 1 wsl wsl 512 Sep 5 19:16 u001b[01;34mrefs u001b[0m n”, “ n”, “look at config file n”, “[core] n”, “ trepositoryformatversion = 0 n”, “ tfilemode = true n”, “ tbare = false n”, “ tlogallrefupdates = true n”, “[remote &quot;origin&quot;] n”, “ turl = https://github.com/nighthawkcoders/APCSP.git n”, “ tfetch = +refs/heads/:refs/remotes/origin/ n”, “[branch &quot;master&quot;] n”, “ tremote = origin n”, “ tmerge = refs/heads/master n” ] } ], “source”: [ “cd $project n”, “ n”, “echo &quot;&quot; n”, “echo &quot;show the secrets of .git&quot; n”, “cd .git n”, “ls -l n”, “ n”, “echo &quot;&quot; n”, “echo &quot;look at config file&quot; n”, “cat config” ] }, { “cell_type”: “code”, “execution_count”: 9, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “ n”, “File listing and status n”, “-rw-r–r– 1 wsl wsl 809 Sep 5 19:18 sample.md n”, “ 15 132 809 sample.md n”, “ n”, “Command ‘mdless’ not found, did you mean: n”, “ n”, “ command ‘dless’ from deb phast (1.5+dfsg-1) n”, “ n”, “Try: sudo apt install n&quot;, &quot; n&quot; ] } ], &quot;source&quot;: [ &quot;cd /tmp n&quot;, &quot; n&quot;, &quot;file= &quot;sample.md &quot; n&quot;, &quot;if [ -f &quot;$file &quot; ]; then n&quot;, &quot; rm $file n&quot;, &quot;fi n&quot;, &quot; n&quot;, &quot;tee -a $file &gt;/dev/null &lt;&lt;EOF n&quot;, &quot;# Show Generated Markdown n&quot;, &quot;This introductory paragraph and this line and the title above are generated using tee with the standard input (&lt;&lt;) redirection operator. n&quot;, &quot;- This bulleted element is still part of the tee body. n&quot;, &quot;EOF n&quot;, &quot; n&quot;, &quot;echo &quot;- This bulleted element and lines below are generated using echo with standard output (&gt;&gt;) redirection operator. &quot; &gt;&gt; $file n&quot;, &quot;echo &quot;- The list definition, as is, is using space to seperate lines. Thus the use of commas and hyphens in output. &quot; &gt;&gt; $file n&quot;, &quot;actions=( &quot;ls,list-directory &quot; &quot;cd,change-directory &quot; &quot;pwd,present-working-directory &quot; &quot;if-then-fi,test-condition &quot; &quot;env,bash-environment-variables &quot; &quot;cat,view-file-contents &quot; &quot;tee,write-to-output &quot; &quot;echo,display-content-of-string &quot; &quot;echo_text_&gt; $file,write-content-to-file &quot; &quot;echo_text_&gt;&gt; $file,append-content-to-file &quot;) n&quot;, &quot;for action in ${actions[@]}; do # for loop is very similar to other language, though [@], semi-colon, do are new n&quot;, &quot; action=${action//-/ } # convert dash to space n&quot;, &quot; action=${action//,/: } # convert comma to colon n&quot;, &quot; action=${action//_text_/ &quot;sample text &quot; } # convert _text_ to sample text, note escape character to avoid &quot; &quot; having meaning n&quot;, &quot; echo &quot; - ${action//-/ } &quot; &gt;&gt; $file # echo is redirected to file with &gt;&gt; n&quot;, &quot;done n&quot;, &quot; n&quot;, &quot;echo &quot; &quot; n&quot;, &quot;echo &quot;File listing and status &quot; n&quot;, &quot;ls -l $file # list file n&quot;, &quot;wc $file # show words n&quot;, &quot;mdless $file # this requires installation, but renders markown from terminal n&quot;, &quot; n&quot;, &quot;rm $file # clean up termporary file&quot; ] } ], &quot;metadata&quot;: { &quot;kernelspec&quot;: { &quot;display_name&quot;: &quot;Bash&quot;, &quot;language&quot;: &quot;bash&quot;, &quot;name&quot;: &quot;bash&quot; }, &quot;language_info&quot;: { &quot;codemirror_mode&quot;: &quot;shell&quot;, &quot;file_extension&quot;: &quot;.sh&quot;, &quot;mimetype&quot;: &quot;text/x-sh&quot;, &quot;name&quot;: &quot;bash&quot; }, &quot;orig_nbformat&quot;: 4, &quot;vscode&quot;: { &quot;interpreter&quot;: { &quot;hash&quot;: &quot;916dbcbb3f70747c44a77c7bcd40155683ae19c65e1c03b4aa3499c5328201f1&quot; } } }, &quot;nbformat&quot;: 4, &quot;nbformat_minor&quot;: 2 } .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu/2022/08/30/Bash.ipynb",
            "relUrl": "/2022/08/30/Bash.ipynb",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Python Quiz",
            "content": "{ “cells”: [ { “cell_type”: “code”, “execution_count”: 1, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “What is your name? n”, “hi bob n”, “What is your favorite food n”, “pizza n”, “What would you rate this quiz out of 10 n”, “9 n” ] } ], “source”: [ “#Print-Python-Quiz-for-APCSP n”, “print(&quot;What is your name?&quot;) n”, “print(&quot;hi &quot; + input(&quot;What is your name?&quot;)) n”, “#Second Question n”, “print(&quot;What is your favorite food&quot;) n”, “print(input(&quot;nice&quot;)) n”, “#3rd question n”, “print(&quot;What would you rate this quiz out of 10&quot;) n”, “print(input(&quot;thank you&quot;))” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.9.12 (‘base’)”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.9.12” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “436b4b5843d5eae3ac0095ef1e325bc2875a9d95214ca244d70e60d547d13479” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu/2022/08/26/Python-Quiz.ipynb",
            "relUrl": "/2022/08/26/Python-Quiz.ipynb",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "My Notes",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# AP Physics Notes n”, “&gt;A blog post/notes page to test Jupyter Notebook and Github usability. Physics is the study of motion. There are numerous versions and types of physics in the world that can be applied in different situtions such as… kinetics, physical, and more. The first unit in AP Physics will be on graphical analysis. We can &quot;graphically analyze&quot; by altering equation and its variables. To make sure you are right, make sure that your units are equal. n”, “&gt;For example in a y=mx+b equation, we can check units by doing: (meters) = (meters/second)(seconds)+(meters). n”, “ n”, “# notes setiings n”, “-toc: true n”, “-badges: true n”, “- comments: true n”, “- categories: (blog) n”, “- image: images/logo.png” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Bash”, “language”: “bash”, “name”: “bash” }, “language_info”: { “codemirror_mode”: “shell”, “file_extension”: “.sh”, “mimetype”: “text/x-sh”, “name”: “bash” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “436b4b5843d5eae3ac0095ef1e325bc2875a9d95214ca244d70e60d547d13479” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu/2022/08/23/My-Notes.ipynb",
            "relUrl": "/2022/08/23/My-Notes.ipynb",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://jonathanwuz.github.io/Jonathan-Wu/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "JonathanWuz is an APCSP student and founder of the JonathanWuz 1 Youtube channel. . a personal website for APCSP. &#8617; . |",
          "url": "https://jonathanwuz.github.io/Jonathan-Wu/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Jonathan Wu's Fastpages",
          "content": "This is [Jonathan Wu’s personal blog site] for AP csp intentions. Here, I will post posts containing code, posts illustrating tool use, and even posts that’ll help me with my homework. . . This [fastpages] page (https://github.com/fastai/fastpages) automates the process of creating blog posts via GitHub Actions, so you don’t have to fuss with conversion scripts. A full list of features can be found on GitHub. . You can edit the index.html file to change this content. . Posts .",
          "url": "https://jonathanwuz.github.io/Jonathan-Wu/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jonathanwuz.github.io/Jonathan-Wu/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}